name: Build
on:
  # workflow_dispatch
  push:
    branches:
      - master
    tags:
      - "v*.*.*"

permissions:
      contents: write

env:
    PROJECT: nodemcu-tools
    PKG_SUFFIX: vsix

jobs:
  build_vsix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      - run: npm ci

      - name: Setting up workflow variables
        id: vars
        shell: bash
        run: |
          # Package version
          if [[ $GITHUB_REF = refs/tags/* ]]; then
            PKG_VERSION=${GITHUB_REF##*/}
          else
            PKG_VERSION=${GITHUB_SHA:0:7}
          fi

          # Package name w/ version
          PKG_BASENAME="${{ env.PROJECT }}-${PKG_VERSION}"

          # Full name of the tarball asset
          PKG_NAME="${PKG_BASENAME}.${PKG_SUFFIX}"

          echo PKG_BASENAME=${PKG_BASENAME} >> $GITHUB_OUTPUT
          echo PKG_NAME=${PKG_NAME} >> $GITHUB_OUTPUT

      - name: Pack vsix
        id: pack
        shell: bash
        run: |
          using: 'node18'
          npm install -g @vscode/vsce
          vsce package -o ${{ steps.vars.outputs.PKG_NAME }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.vars.outputs.PKG_BASENAME }}
          path: ${{ steps.vars.outputs.PKG_NAME }}

      - name: Publish release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          generate_release_notes: true
          files: |
            ${{ steps.vars.outputs.PKG_NAME }}

      # - name: Publish to VSCode Market
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: vsce publish -i ${{ steps.vars.outputs.PKG_NAME }} -p ${{ secrets.VSCE_TOKEN }}

      # - name: Publish to Open VSX Registry
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: |
      #     npm install -g ovsx
      #     ovsx publish -i ${{ steps.vars.outputs.PKG_NAME }} -p ${{ secrets.OVSX_TOKEN }}
